// <auto-generated />
using GraphQLLearning.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQLLearning.Migrations
{
    [DbContext(typeof(PokemonContext))]
    [Migration("20240423124648_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraphQLLearning.Models.Pokemon", b =>
                {
                    b.Property<int>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pokemon_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PokemonId"));

                    b.Property<string>("PokemonDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pokemon_description");

                    b.Property<string>("PokemonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pokemon_name");

                    b.HasKey("PokemonId");

                    b.ToTable("pokemon");
                });

            modelBuilder.Entity("GraphQLLearning.Models.PokemonType", b =>
                {
                    b.Property<int>("PokemonTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pokemon_type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PokemonTypeId"));

                    b.Property<string>("PokemonTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pokemon_type_name");

                    b.HasKey("PokemonTypeId");

                    b.ToTable("pokemon_type");
                });

            modelBuilder.Entity("pokemons_pokemon_types", b =>
                {
                    b.Property<int>("PokemonTypesPokemonTypeId")
                        .HasColumnType("int");

                    b.Property<int>("PokemonsPokemonId")
                        .HasColumnType("int");

                    b.HasKey("PokemonTypesPokemonTypeId", "PokemonsPokemonId");

                    b.HasIndex("PokemonsPokemonId");

                    b.ToTable("pokemons_pokemon_types");
                });

            modelBuilder.Entity("pokemons_pokemon_types", b =>
                {
                    b.HasOne("GraphQLLearning.Models.PokemonType", null)
                        .WithMany()
                        .HasForeignKey("PokemonTypesPokemonTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GraphQLLearning.Models.Pokemon", null)
                        .WithMany()
                        .HasForeignKey("PokemonsPokemonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
